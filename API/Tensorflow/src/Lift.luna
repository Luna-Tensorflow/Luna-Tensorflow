import Std.Base

import Tensorflow.Tensor
import Tensorflow.Operations
import Tensorflow.Graph
import Tensorflow.Types

# TODO FIXME add lift support to types other than Float
# This may require further language support or at least features that are not yet available
# lift1 :: (TFOutput a1 -> (List TFOutput b)) -> Tensor a1 -> (List Tensor b)
def lift1 fun:
    p1 = makePlaceholder FloatType "1"
    result = fun p1
    graph = makeGraphFromOutputList result

    def liftedf a:
        (graph . evalSubsts makeEmptyState [("1", a)]).first
    liftedf

# lift2 :: (TFOutput a1 -> TFOutput a2 -> (List TFOutput b)) -> Tensor a1 -> Tensor a2 -> (List Tensor b)
def lift2 fun:
    p1 = makePlaceholder FloatType "1"
    p2 = makePlaceholder FloatType "2"
    result = fun p1 p2
    graph = makeGraphFromOutputList result

    def liftedf a b:
        (graph . evalSubsts makeEmptyState [("1", a), ("2", b)]).first
    liftedf

# lift3 :: (TFOutput a1 -> TFOutput a2 -> TFOutput a3 -> (List TFOutput b)) -> Tensor a1 -> Tensor a2 -> Tensor a3 -> (List Tensor b)
def lift3 fun:
    p1 = makePlaceholder FloatType "1"
    p2 = makePlaceholder FloatType "2"
    p3 = makePlaceholder FloatType "3"
    result = fun p1 p2 p3
    graph = makeGraphFromOutputList result

    def liftedf a b c:
        (graph . evalSubsts makeEmptyState [("1", a), ("2", b), ("3", c)]).first
    liftedf

# lift4 :: (TFOutput a1 -> TFOutput a2 -> TFOutput a3 -> TFOutput a4 -> (List TFOutput b)) -> Tensor a1 -> Tensor a2 -> Tensor a3 -> Tensor a4 -> (List Tensor b)
def lift4 fun:
    p1 = makePlaceholder FloatType "1"
    p2 = makePlaceholder FloatType "2"
    p3 = makePlaceholder FloatType "3"
    p4 = makePlaceholder FloatType "4"
    result = fun p1 p2 p3 p4
    graph = makeGraphFromOutputList result

    def liftedf a b c d:
        (graph . evalSubsts makeEmptyState [("1", a), ("2", b), ("3", c), ("4", d)]).first
    liftedf

# lift5 :: (TFOutput a1 -> TFOutput a2 -> TFOutput a3 -> TFOutput a4 -> TFOutput a5 -> (List TFOutput b)) -> Tensor a1 -> Tensor a2 -> Tensor a3 -> Tensor a4 -> Tensor a5 -> (List Tensor b)
def lift5 fun:
    p1 = makePlaceholder FloatType "1"
    p2 = makePlaceholder FloatType "2"
    p3 = makePlaceholder FloatType "3"
    p4 = makePlaceholder FloatType "4"
    p5 = makePlaceholder FloatType "5"
    result = fun p1 p2 p3 p4 p5
    graph = makeGraphFromOutputList result

    def liftedf a b c d e:
        (graph . evalSubsts makeEmptyState [("1", a), ("2", b), ("3", c), ("4", d), ("5", e)]).first
    liftedf

