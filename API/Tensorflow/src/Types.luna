import Std.Foreign.C.Value
import Std.Foreign

class FloatType:
    def typename:
        "TF_FLOAT"
    def ctype:
        CFloat
    def fromC val:
        val.toReal
    def toC val:
        CFloat.fromReal val
    def cleanupLuna val:
        None
    def cleanupC val:
        None

class DoubleType:
    def typename:
        "TF_DOUBLE"
    def ctype:
        CDouble
    def fromC val:
        val.toReal
    def toC val:
        CDouble.fromReal val
    def cleanupLuna val:
        None
    def cleanupC val:
        None

class Int8Type:
    def typename:
        "TF_INT8"
    def ctype:
        CInt8
    def fromC val:
        val.toInt
    def toC val:
        CInt8.fromInt val
    def cleanupLuna val:
        None
    def cleanupC val:
        None

class Int16Type:
    def typename:
        "TF_INT16"
    def ctype:
        CInt16
    def fromC val:
        val.toInt
    def toC val:
        CInt16.fromInt val
    def cleanupLuna val:
        None
    def cleanupC val:
        None

class Int32Type:
    def typename:
        "TF_INT32"
    def ctype:
        CInt32
    def fromC val:
        val.toInt
    def toC val:
        CInt32.fromInt val
    def cleanupLuna val:
        None
    def cleanupC val:
        None

class Int64Type:
    def typename:
        "TF_INT64"
    def ctype:
        CInt64
    def fromC val:
        val.toInt
    def toC val:
        CInt64.fromInt val
    def cleanupLuna val:
        None
    def cleanupC val:
        None

class UInt8Type:
    def typename:
        "TF_INT8"
    def ctype:
        CUInt8
    def fromC val:
        val.toInt
    def toC val:
        CUInt8.fromInt val
    def cleanupLuna val:
        None
    def cleanupC val:
        None

class UInt16Type:
    def typename:
        "TF_INT16"
    def ctype:
        CUInt16
    def fromC val:
        val.toInt
    def toC val:
        CUInt16.fromInt val
    def cleanupLuna val:
        None
    def cleanupC val:
        None

class UInt32Type:
    def typename:
        "TF_INT32"
    def ctype:
        CUInt32
    def fromC val:
        val.toInt
    def toC val:
        CUInt32.fromInt val
    def cleanupLuna val:
        None
    def cleanupC val:
        None

class UInt64Type:
    def typename:
        "TF_INT64"
    def ctype:
        CUInt64
    def fromC val:
        val.toInt
    def toC val:
        CUInt64.fromInt val
    def cleanupLuna val:
        None
    def cleanupC val:
        None

class BoolType:
    def typename:
        "TF_BOOL"
    def ctype:
        CUInt8
    def fromC val:
        (val.toInt == 0).not
    def toC val:
        case val of
            True: CUInt8.fromInt 1
            False: CUInt8.fromInt 0
    def cleanupLuna val:
        None
    def cleanupC val:
        None

class StringType:
    def typename:
        "TF_STRING"
    def ctype:
        CString
    def fromC val:
        val.toText
    def toC val:
        CString.fromText val
    def cleanupLuna val:
        val.free
    def cleanupC val:
        freePointer = lookupSymbol "TFL" "free_pointer"
        freePointer.call None [val.toCArg]