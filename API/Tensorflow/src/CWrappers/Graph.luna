import Std.Foreign
import Std.Foreign.C.Value

import Tensorflow.CWrappers.Tensor
import Tensorflow.CWrappers.State

import Tensorflow.Operations
import Tensorflow.Types
import Tensorflow.Graph

import Tensorflow.CWrappers.Helpers

class GraphWrapper:
    ptr :: ManagedPointer None

    def toCArg:
        self.ptr.toCArg

    def eval outputCount state:
        evalSubsts outputCount [] state

    def evalSubsts outputCount substitutions state:
        state' = state

        count = outputCount
        phCount = substitutions . length

        (names, substs) = unzip substitutions
        substs' = substs.each id

        subsNameArr = Pointer CString . mallocElems phCount
        indexed = 0 . upto (phCount - 1) . zip names
        indexed . each (idx, elem):
            subsNameArr . moveElems idx . write (CString . fromText elem)


        substsArr = Pointer (Pointer None) . mallocElems phCount
        indexed = 0 . upto (phCount - 1) . zip substs'
        indexed . each (idx, elem):
            substsArr . moveElems idx . write (elem.ptr.ptr)

        returnedPtr = callHandlingError "eval_graph_with_placeholders" (Pointer (Pointer None)) [self.toCArg,
                subsNameArr.toCArg, substsArr.toCArg, (CInt64.fromInt phCount).toCArg, state'.wrapper.toCArg]

        returnedArr = Array (Pointer None) . make (1+count) returnedPtr

        lst = returnedArr . toList
        managed = ManagedPointer None . fromPointer releaseMethod (lst . at 0 . get)
        statewrapper = StateWrapper managed

        managed1 = (lst . drop 1) . each (x: ManagedPointer None . fromPointer releaseMethod x)
        retwrappers = managed1 . each (ptr: TensorWrapper ptr)

        callHandlingError "free_pointer" None [returnedPtr.toCArg]

        0.upto (phCount - 1) . each (idx: subsNameArr . moveElems idx . read . free)
        subsNameArr.free
        substsArr.free

        (statewrapper, retwrappers)

    def foldEval placeholderNames placeholderVals initialState:
        placeholderVals' = placeholderVals.each id
        initialState' = initialState

        phCount = placeholderNames . length
        evalCount = placeholderVals' . length

        subsNameArr = Pointer CString . mallocElems phCount
        indexed = 0 . upto (phCount - 1) . zip placeholderNames
        indexed . each (idx, elem):
            subsNameArr . moveElems idx . write (CString . fromText elem)

        substsArr = Pointer (Pointer None) . mallocElems (evalCount * phCount)
        substs = placeholderVals' . fold [] (+)
        indexed = 0 . upto (phCount * evalCount - 1) . zip substs
        indexed . each (idx, elem):
            substsArr . moveElems idx . write (elem.ptr.ptr)

        returnedState = callHandlingError "fold_eval" (Pointer None) [self.toCArg, subsNameArr . toCArg,
                (CInt64.fromInt phCount).toCArg, substsArr.toCArg,  initialState'.wrapper.toCArg,
                (CInt64.fromInt evalCount).toCArg]

        managed = ManagedPointer None . fromPointer releaseMethod returnedState
        stateWrapper = StateWrapper managed

        0.upto (phCount - 1) . each (idx: subsNameArr . moveElems idx . read . free)
        subsNameArr.free
        substsArr.free

        stateWrapper



def makeGraphWrapperFromOutputList outputList:
    outputList' = outputList.each id
    count = outputList' . length

    carr = Pointer (Pointer None) . mallocElems count
    indexed = 0 . upto (count - 1) . zip outputList'
    indexed . each (idx, elem):
        carr . moveElems idx . write (elem.ptr.ptr)

    returnedPtr = callHandlingError "make_graph_from_outputs" (Pointer None) [carr.toCArg, (CInt64.fromInt count).toCArg]
    managedGraph = ManagedPointer None . fromPointer releaseMethod returnedPtr

    carr.free

    GraphWrapper managedGraph
