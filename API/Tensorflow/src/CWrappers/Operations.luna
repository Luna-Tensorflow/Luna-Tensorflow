import Std.Foreign
import Std.Foreign.C.Value
import Tensorflow.Tensor
import Tensorflow.CWrappers.Tensor

class OperationWrapper:
    ptr :: ManagedPointer None
    #typename :: Text # TODO

    def toCArg:
        self.ptr.toCArg

    def eval:
        evalOp = lookupSymbol "TFL" "eval_op_float"
        releaseMethod = lookupSymbol "TFL" "release"
        tensorPtr = evalOp.call (Pointer None) [self.toCArg]
        managedTensorPtr = ManagedPointer None . fromPointer releaseMethod tensorPtr

        Tensor (TensorWrapper managedTensorPtr) . toList


def makeConstWrapper tensor:
    makeOp = lookupSymbol "TFL" ("make_op_const_float")
    releaseMethod = lookupSymbol "TFL" "release"
    op = makeOp.call (Pointer None) [tensor.wrapper.toCArg]
    managedOp = ManagedPointer None . fromPointer releaseMethod op
    OperationWrapper managedOp

def makeBinaryOpWrapper name a b:
    makeOp = lookupSymbol "TFL" ("make_op_binary_float")
    releaseMethod = lookupSymbol "TFL" "release"
    op = makeOp.call (Pointer None) [(CString.fromText name).toCArg, a.wrapper.toCArg, b.wrapper.toCArg]
    managedOp = ManagedPointer None . fromPointer releaseMethod op
    OperationWrapper managedOp
