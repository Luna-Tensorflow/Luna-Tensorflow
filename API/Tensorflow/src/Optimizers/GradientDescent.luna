import Tensorflow.Variables
import Tensorflow.Operations
import Tensorflow.Types
import Tensorflow.Gradient
import Tensorflow.Graph
import Tensorflow.GeneratedOps

class GradientDescent:
      lr :: Real

      def toText:
          "Gradient Descent " + self.lr.toText

      def toJSON:
          0 # TODO maybe some JSON format?
          self.toText.toJSON

      # makeOptimizingGraph :: Operation a -> Operation a -> (Operation a -> Operation a -> Operation b) -> List Variable -> TFGraph
      def makeOptimizingGraph yTrue yPred loss variables:
          err = loss yTrue yPred
          grads = Gradients.make [err] variables []
          varsAndGrads = variables.zip grads

          def makeAndApplyGradientDescent (v, g):
              lr = Operations.constFromScalar v.typetag self.lr
              applyGradientDescentGen "" v lr g v.typetag False

          errWithSideEffect = Variables.sequence' err makeAndApplyGradientDescent varsAndGrads

          TFGraphMaker.makeFromOutput errWithSideEffect

class GradientDescentOptimizer:
    GradientDescentOptimizer

    def create lr:
        GradientDescent lr
