import Tensorflow.CWrappers.Operations
import Tensorflow.Tensor

# not sure if we want separate classes for each op type or one class for all?
class TFOperation:
    wrapper :: OperationWrapper

    def ptr:
        self.wrapper.ptr

    def eval:
        self.wrapper.eval

    def toJSON:
        self.eval.toJSON

    def + other:
        add self other

    def * other:
        mul self other

    def - other:
        sub self other

def makeConst tensor:
    wrapper = makeConstWrapper tensor
    TFOperation wrapper

def constFromList list:
    tensor = tensorFromList list
    makeConst tensor

def constFromScalar x:
    constFromList [x]

def add a b:
    wrapper = makeBinaryOpWrapper "Add" a b
    TFOperation wrapper

def mul a b:
    wrapper = makeBinaryOpWrapper "Mul" a b
    TFOperation wrapper

def sub a b:
    wrapper = makeBinaryOpWrapper "Sub" a b
    TFOperation wrapper

def partial a b:
    wrapper = makePartialDerivativeWrapper a b
    TFOperation wrapper

def sigmoid a:
    wrapper = makeUnaryOpWrapper "Sigmoid" a
    TFOperation wrapper

