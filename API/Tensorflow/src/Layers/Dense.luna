import Tensorflow.Tensor
import Tensorflow.Types
import Tensorflow.Operations
import Tensorflow.Variables
import Tensorflow.Layers.Activation

# TODO these type parameters are temporary
class DenseLayer varT layerT:
      shape :: List Int
      weights :: varT # :: Variable a
      biases :: varT # :: Variable a
      parentLayer :: layerT # :: Layer # TODO no interfaces

      # forward :: Operation a -> Operation a
      def forward inp:
          myin = self.parentLayer.forward inp
          prod = matMul self.weights myin
          out = add prod self.biases
          out

      # trainableVariables :: List Variable a
      def trainableVariables:
          [self.weights, self.biases] + self.parentLayer.trainableVariables

# dense :: List Int -> Layer -> Layer
def dense shape parent:
    w = variable "w" [] # TODO defaultValue, TODO name scope to layer - need a mechanism for prefixes
    b = variable "b" [] # TODO j.w.
    d = DenseLayer shape w b parent
    d

# denseWithActivation :: List Int -> (Operation a -> Operation a) -> Layer -> Layer
def denseWithActivation shape activationFunction parent:
    d = dense shape parent
    a = ActivationLayer activationFunction d
    a
