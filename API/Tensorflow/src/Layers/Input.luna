import Tensorflow.Tensor
import Tensorflow.Types
import Tensorflow.Operations
import Tensorflow.CWrappers.Helpers

# Input layer. It is used for feeding Model with initial data.
class InputLayer a:
      name :: Text
      typetag :: a
      shape :: List Int

      # Returns Input layer in Text type.
      # `return` :: Text
      # toText :: Text
      def toText:
          self.name + self.shape.toText

      # Returns Input layer in JSON type.
      # `return` :: JSON
      # toJSON :: JSON
      def toJSON:
          name = self.name
          shape = self.shape
          parents = []
          type = "Input"
          JSON.empty . insert "name" name . insert "shape" shape . insert "parents" parents . insert "type" type

      # Computes output on this layer, simply returns same input.
      # Arguments:
      # `inp` :: TFOutput a
      # forward :: TFOutput a -> TFOutput a
      def forward inp:
          inp

      # Helper function to run evaluation of model.
      # Arguments:
      # `inp` :: TFOutput a
      # eval :: TFOutput a -> TFOutput a
      def eval inp:
          inp

      # Returns variables to train, up to this layer, which is empty List.
      # trainableVariables :: List (TFOutput ErasedType)
      def trainableVariables:
          []

      # Returns type of output in this layer.
      # outputType :: TypeTag
      def outputType:
          self.typetag

# Input layer creation and usage.
class Input:
    Input

    # Input layer constructor.
    # Arguments:
    # `typetag` :: TypeTag
    # `shape` :: List Int
    # `return` :: InputLayer
    # create :: TypeTag -> List Int -> InputLayer
    def create typetag shape:
        name = getNextName "Input"
        InputLayer name typetag shape
