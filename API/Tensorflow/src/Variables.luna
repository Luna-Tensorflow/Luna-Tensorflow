import Tensorflow.CWrappers.Operations
import Tensorflow.Tensor
import Tensorflow.Types
import Tensorflow.Operations
import Std.Foreign.C.Value

class Variable a:
     varwrapper :: ManagedPointer None # TODO

     # :: OutputWrapper a
     def wrapper:
         self.varwrapper.output

     def eval:
         self.wrapper.eval

     def toJSON:
         self.eval.toJSON

# makeVariable :: Text -> Tensor a -> Variable a
def variable name defaultValue:
    throw "not implemented"

# returns the same operation as its first argument but enriched with a side effect of assigning val to var when this operation is computed in a graph
# assign :: Operation a -> Variable b -> Operation b -> Operation a
def assign op var val:
    throw "not implemented"

# this is an operation that is meant to have no value, it may be used to build graphs that consist of only side effects
# for now it's implemented as a constant, but it should be rewritten so that no TF operations can be done on it besides providing it as a first argument of apply and output to compute in a graph
# Operation ()
def unitOp:
    constFromScalar Int8Type 1
